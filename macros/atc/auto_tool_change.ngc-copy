o<auto_tool_change> sub
;(debug, current_tool=#<tool_in_spindle> current_pocket=#<current_pocket>, selected_tool=#<selected_tool> selected_pocket=#<selected_pocket>)

; auto tool change 
; expected behavior:
;   start condition: ATC empty   
;       T1 M6 - performs a manual tool change to T1, T1 is not yet ATC bound
;       T0 M6 - performs a manual tool change leaving an empty spindle and empty ATC 
;       T1 M6 - same as above, performs a manual tool change to T1, T1 is not yet ATC bound
;       M16   - bind T1 to the ATC, T1 is now ATC bound
;       T0 M6 - store T1 from the spindle to the ATC
;       T1 M6 - load T1 from ATC to Spindle
;       T2 M6 - store T1 from the spindle to the ATC, and perform a manual change for T2, T2 is not ATC bound
;       M16   . bind T2 to the ATC, T2 is now ATC bound
;       T1 M6 - store T2 in ATC, load T1 from ATC to the Spindle
;       M17   - unbinds T1 from ATC
;       T0 M6 - performs a manual tool change leaving an empty spindle, and T2 in the ATC 



; atc specs
#<left_positions> = 18    ; left atc pockets
#<left_deg_pos>   = [360/#<left_positions>]
#<right_positions>= 18    ; right atc pockets
#<right_deg_pos>  = [360/#<right_positions>]

;atc process config
#<z_fine_feed>                          = [#<_ini[atc]z_fine_feed>]
#<z_fine_position>                      = [#<_ini[atc]z_fine_position>]
#<z_coarse_feed>                        = [#<_ini[atc]z_coarse_feed>]
#<z_coarse_position>                    = [#<_ini[atc]z_coarse_position>]
#<parameter_store_tool_in_spindle>      = 4900 ; relies on 4090 to be manually created in linuxcnc.var file
#<parameter_store_tool_in_spindle_auto> = 4901 ; relies on 4091 to be manually created in linuxcnc.var file
#<parameter_start>                      = 4902 ; relies on 4902-4938 + #<left_positions> + #<right_positions> to be manually created in linuxcnc.var file


; quick sanity check
o10 if [#<tool_in_spindle> eq #<selected_tool>]
  ;(debug, atc_end1)
	#[#<parameter_store_tool_in_spindle>] = #<selected_tool> ; set spindle tool to new tool
  o<auto_tool_change> endsub [1]
o10 endif

; ignore if not in actual execution
o11 if [ #<_task> ne 1 ]
  (debug, task not 1, bailing out)
  o<auto_tool_change> endsub [1]
o11 endif


; aux vars
#<next_pocket> = 0 ; assigns 0 to the next pocket for a later check if the tool is found in the carousel
#<open_pocket> = 0

; look for an empty pocket and desired tool pocket
#<loop_idx>=[#<left_positions>+#<right_positions>]
o20 while [ #<loop_idx> gt 0 ]
  o21 if [ #[#<parameter_start>+#<loop_idx>-1] eq #<selected_tool> ] ; checks all pockets to see if it contains tool number requested
		#<next_pocket> = #<loop_idx> ; if tool is found in pocket, assigns the next pocket
  o21 endif
  o22 if [ #[#<parameter_start>+#<loop_idx>-1] eq 0 and #[#<parameter_store_tool_in_spindle_auto>] eq 1 ] ; checks if the pocket is empty, last pocket checked will be the lowest empty pocket number, for putting tool in spindle away.
		#<open_pocket> = #<loop_idx> ; 
  o22 endif
  #<loop_idx>=[#<loop_idx>-1]
o20 endwhile

#<same_carousel>=0   
o30 if [#<selected_tool> ne 0  and #[#<parameter_store_tool_in_spindle_auto>] eq 1 ] 
 o31 if [#<next_pocket> gt #<left_positions>]
  o32 if [#<open_pocket> gt  #<left_positions>]
    #<same_carousel>=1
  o32 endif
 o31 endif
 o33 if [#<next_pocket> le #<left_positions>]
  o34 if [#<open_pocket> le  #<left_positions>]
    #<same_carousel>=1
  o34 endif
 o33 endif
o30 endif

(debug, -----------------)
(debug,open_pocket=#<open_pocket> next_pocket=#<next_pocket>, same_carousel=#<same_carousel>) 

;now we know which pocket the next tool is sitting in
;we need to know if we need to put a tool away
;or if there is not tool in the spindle
  
 
m19 r0 Q5; align the spindle

o180 if [ #<tool_in_spindle> gt 0 and #[#<parameter_store_tool_in_spindle_auto>] eq 1] ; checks if there is a valid tool in the spindle
  o190 if [#<open_pocket> eq 0] ;If there is a tool in the spindle, checks if there is an open pocket
		 (abort, carousel is full, cant put away tool into carousel)
	o190 endif

  ; ensure carousel is in current tool pocket pos
  o191 if [#<open_pocket> le #<left_positions>] ; left atc?
    #<current_positioned_pocket>=[#<_u>/#<left_deg_pos>]
    o1910 if [#<current_positioned_pocket> lt 0]
      #<current_positioned_pocket>=[#<left_positions>+#<current_positioned_pocket>]
    o1910 endif
    (debug, open pocket=#<open_pocket> u=#<_u> curr pkt pos= #<current_positioned_pocket>)
    o1912 if [abs[#<open_pocket> - #<current_positioned_pocket>] lt [#<left_positions> / 2]]
      (debug, moving in +++ g0 u[[#<left_deg_pos>*[#<open_pocket>-1]]])
      g53 g0 u[#<left_deg_pos>*[#<open_pocket>-1]]
    o1912 else
      (debug, moving in --- g0 u[#<left_deg_pos>*[#<open_pocket>-#<left_positions>]])
      g53 g0 u[#<left_deg_pos>*[#<open_pocket>-1]]
      ;g53 g0 u[#<left_deg_pos>*[#<open_pocket>-#<left_positions>]]
    o1912 endif
    #<retract_carousel>=22
    #<extend_carousel>=23
    #<is_tool_in_pocket>=13      ; motion.digital-in-xx
  o191 elseif [#<open_pocket> le [#<left_positions>+#<right_positions>]] ; right atc?
    g53 g0 v[#<right_deg_pos>*[#<open_pocket>-#<left_positions>-1]]
    #<retract_carousel>=24
    #<extend_carousel>=25
    #<is_tool_in_pocket>=17      ; motion.digital-in-xx
  o191 else
    (abort, invalid open pocket: #<open_pocket> )
  o191 endif

  g4 p1 ; dwell
  m66 p[#<is_tool_in_pocket>] l0; check if there is a tool in carousel pocket
  o192 if [#5399 eq 1]
    (abort, pocket #<open_pocket> not empty, tool detected)
  o192 endif

  ; move to z clamp/release position
  g53 g1 z[#<z_fine_position>] f[#<z_coarse_feed>]

  m#<extend_carousel> q0
  ;g4 p1 ; dwell

  m11 ; release tool

  ; go to safe z
  g53 g1 z[#<z_coarse_position>] f[#<z_fine_feed>]
  g53 g1 z[#<_ini[axis_z]max_limit>] f[#<z_coarse_feed>]

  o197 if [#<same_carousel> eq 0 or #<next_pocket> eq 0]
    m10 ; clamp tool

    m#<retract_carousel> q0
  o197 endif

  #[#<parameter_start>+#<open_pocket>-1] = #<tool_in_spindle> ; save tool number in pocket
	#[#<parameter_store_tool_in_spindle>] = 0 ; set spindle tool to 'empty'
  #[#<parameter_store_tool_in_spindle_auto>] = 0 ; set spindle tool manual flag to true
  ; declare empty spindle for now
  m61 q0 g43 h0
o180 elseif [#<tool_in_spindle> gt 0 and #[#<parameter_store_tool_in_spindle_auto>] eq 0 ]
  ; go to safe z
  g53 g1 z[#<_ini[axis_z]max_limit>] f[#<z_coarse_feed>]
  T0 M6
  #<tool_in_spindle>=0
	#[#<parameter_store_tool_in_spindle>] = 0 ; set spindle tool to 'empty'
  #[#<parameter_store_tool_in_spindle_auto>] = 0 ; set spindle tool manual flag to true
o180 endif
 
o130 if [#<next_pocket> eq 0] ; if tool is not found, notify and default to manual tool change
  ;(debug, requested tool no #<selected_tool> not in carousel)
  ;manual tool change
  ; go to safe z
  g53 g1 z[#<_ini[axis_z]max_limit>] f[#<z_coarse_feed>]
  T#<selected_tool> M6
	#[#<parameter_store_tool_in_spindle>] = #<selected_tool> ; set spindle tool to new tool
  #[#<parameter_store_tool_in_spindle_auto>] = 0 ; set spindle tool manual flag to true
  o<auto_tool_change> endsub [1]
o130 endif


o200 if [#<selected_tool> gt 0] ; selected tool is not tool 0
  ; ensure carousel is in current tool pocket pos
  o291 if [#<next_pocket> le #<left_positions>] ; left atc?
    
    #<current_positioned_pocket>=[#<_u>/#<left_deg_pos>]
    o2910 if [#<current_positioned_pocket> lt 0]
      #<current_positioned_pocket>=[#<left_positions>+#<current_positioned_pocket>]
    o2910 endif
    (debug, next pocket=#<next_pocket> u=#<_u> curr pkt pos= #<current_positioned_pocket>)
    o2912 if [abs[#<next_pocket> - #<current_positioned_pocket>] lt [#<left_positions> / 2]]
      (debug, moving in +++ g0 u[[#<left_deg_pos>*[#<next_pocket>-1]]])
      g53 g0 u[#<left_deg_pos>*[#<next_pocket>-1]]
    o2912 else
      (debug, moving in --- g0 u[#<left_deg_pos>*[#<next_pocket>-#<left_positions>]])
      ;g53 g0 u[#<left_deg_pos>*[#<next_pocket>-#<left_positions>]]
      g53 g0 u[#<left_deg_pos>*[#<next_pocket>-1]]
    o2912 endif

    #<retract_carousel>=22
    #<extend_carousel>=23
    #<is_tool_in_pocket>=13      ; motion.digital-in-xx
  o291 elseif [#<next_pocket> le [#<left_positions>+#<right_positions>]] ; right atc?
    g53 g0 v[#<right_deg_pos>*[#<next_pocket>-#<left_positions>-1]]
    #<retract_carousel>=24
    #<extend_carousel>=25
    #<is_tool_in_pocket>=17      ; motion.digital-in-xx
  o291 else
    (abort, invalid drop in pocket: #<next_pocket> )
  o291 endif

  g4 p1 ; dwell
  m66 p[#<is_tool_in_pocket>] l0; check if there is a tool in carousel pocket
  
  ; FIXME
  ;o292 if [#5399 eq 0]
  ;  (abort, no tool detected in pocket #<next_pocket>)
  ;o292 endif

  o297 if [#<tool_in_spindle> eq 0 or #<same_carousel> eq 0]
    o2971 if [#<tool_in_spindle> eq 0]
      ; go to safe z
      g53 g1 z[#<_ini[axis_z]max_limit>] f[#<z_coarse_feed>]
    o2971 endif
    
    m#<extend_carousel> q0
    ;g4 p1 ; dwell

    m11 ; release tool
  o297 endif

  ; move to z clamp/release position
  g53 g1 z[#<z_coarse_position>] f[#<z_coarse_feed>]
  g53 g1 z[#<z_fine_position>] f[#<z_fine_feed>]

  m10 ; clamp tool

  m#<retract_carousel> q0

  ; go to safe z
  g53 g1 z[#<_ini[axis_z]max_limit>] f[#<z_coarse_feed>]

  #[#<parameter_start>+#<next_pocket>-1] = 0 ; empty the pocket
  #[#<parameter_store_tool_in_spindle>] = #<selected_tool>  ;Set persistent variable to remember tool in spindle after power cycle
  #[#<parameter_store_tool_in_spindle_auto>] = 1 ; set spindle tool manual flag to false
o200 else
  ; nothing to do as of now, since we retracted after dropping the tool
o200 endif

; declare new tool, load tool offsets
m61 q#<selected_tool> g43 h#<selected_tool>

;(debug, atc_end final)
o<auto_tool_change> endsub [1]
m2
